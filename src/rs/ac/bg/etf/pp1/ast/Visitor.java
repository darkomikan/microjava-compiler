// generated with ast extension for cup
// version 0.8
// 17/0/2023 12:43:33


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(MoreVarDecl MoreVarDecl);
    public void visit(Mulop Mulop);
    public void visit(MethodDecl MethodDecl);
    public void visit(VarOrArr VarOrArr);
    public void visit(ConstructorDecl ConstructorDecl);
    public void visit(Literal Literal);
    public void visit(MethodDeclListNoE MethodDeclListNoE);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(StatementList StatementList);
    public void visit(Addop Addop);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(AnotherVarDecl AnotherVarDecl);
    public void visit(Designator Designator);
    public void visit(MoreConstDecl MoreConstDecl);
    public void visit(Term Term);
    public void visit(Condition Condition);
    public void visit(OptConstructorsMethods OptConstructorsMethods);
    public void visit(GlobalDeclList GlobalDeclList);
    public void visit(VarDeclList VarDeclList);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(DesignatorList DesignatorList);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(ClassDecl ClassDecl);
    public void visit(CondFact CondFact);
    public void visit(OptActPars OptActPars);
    public void visit(ConstructorDeclListNoE ConstructorDeclListNoE);
    public void visit(Program Program);
    public void visit(FormPars FormPars);
    public void visit(Mod Mod);
    public void visit(Div Div);
    public void visit(Mul Mul);
    public void visit(Sub Sub);
    public void visit(Add Add);
    public void visit(LessOrEqual LessOrEqual);
    public void visit(Less Less);
    public void visit(GreaterOrEqual GreaterOrEqual);
    public void visit(Greater Greater);
    public void visit(NotEqual NotEqual);
    public void visit(Equal Equal);
    public void visit(Assignop Assignop);
    public void visit(Label Label);
    public void visit(SingleIdent SingleIdent);
    public void visit(ArrDesignator ArrDesignator);
    public void visit(DotDesignator DotDesignator);
    public void visit(ExprFactor ExprFactor);
    public void visit(NewObjFactor NewObjFactor);
    public void visit(NewArrFactor NewArrFactor);
    public void visit(LiteralFactor LiteralFactor);
    public void visit(MethodFactor MethodFactor);
    public void visit(DesignatorFactor DesignatorFactor);
    public void visit(SingleFactor SingleFactor);
    public void visit(MultipleFactor MultipleFactor);
    public void visit(SingleTerm SingleTerm);
    public void visit(MultipleTerm MultipleTerm);
    public void visit(NegativeTerm NegativeTerm);
    public void visit(TwoCondExpr TwoCondExpr);
    public void visit(OneCondExpr OneCondExpr);
    public void visit(SingleCondFact SingleCondFact);
    public void visit(MultipleCondFact MultipleCondFact);
    public void visit(SingleCondTerm SingleCondTerm);
    public void visit(MultipleCondTerm MultipleCondTerm);
    public void visit(SingleActPars SingleActPars);
    public void visit(MultipleActPars MultipleActPars);
    public void visit(NoActPars NoActPars);
    public void visit(SomeActPars SomeActPars);
    public void visit(NoDesignator NoDesignator);
    public void visit(SingleDesignator SingleDesignator);
    public void visit(MoreComma MoreComma);
    public void visit(MoreDesignator MoreDesignator);
    public void visit(MultDesignator MultDesignator);
    public void visit(DesignatorDec DesignatorDec);
    public void visit(DesignatorInc DesignatorInc);
    public void visit(DesignatorCall DesignatorCall);
    public void visit(DesignatorAssign DesignatorAssign);
    public void visit(UnmatchedWhile UnmatchedWhile);
    public void visit(UnmatchedIfElse UnmatchedIfElse);
    public void visit(UnmatchedIf UnmatchedIf);
    public void visit(ErrorStatement ErrorStatement);
    public void visit(BlockStatement BlockStatement);
    public void visit(ForeachStatement ForeachStatement);
    public void visit(PrintStatement2 PrintStatement2);
    public void visit(PrintStatement PrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnNoExpr ReturnNoExpr);
    public void visit(ReturnExpr ReturnExpr);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(MatchedWhile MatchedWhile);
    public void visit(MatchedIfElse MatchedIfElse);
    public void visit(MatchedDesignatorStatement MatchedDesignatorStatement);
    public void visit(UnmatchedStatement UnmatchedStatement);
    public void visit(MatchedStatement MatchedStatement);
    public void visit(Type Type);
    public void visit(SingleFormPars SingleFormPars);
    public void visit(MultipleFormPars MultipleFormPars);
    public void visit(MethodVoidName MethodVoidName);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(TypeMethodNoPars TypeMethodNoPars);
    public void visit(TypeMethodPars TypeMethodPars);
    public void visit(VoidMethodNoPars VoidMethodNoPars);
    public void visit(VoidMethodPars VoidMethodPars);
    public void visit(NoStatement NoStatement);
    public void visit(MultipleStatement MultipleStatement);
    public void visit(ConstructorDeclNoPars ConstructorDeclNoPars);
    public void visit(ConstructorDeclPars ConstructorDeclPars);
    public void visit(SingleConstructorDecl SingleConstructorDecl);
    public void visit(MultipleConstructorDecl MultipleConstructorDecl);
    public void visit(NoConstructorsMethods NoConstructorsMethods);
    public void visit(BracesOnly BracesOnly);
    public void visit(ConstructorsMethods ConstructorsMethods);
    public void visit(MethodsOnly MethodsOnly);
    public void visit(ConstructorsOnly ConstructorsOnly);
    public void visit(NoVarDecl NoVarDecl);
    public void visit(MultipleVarDecl MultipleVarDecl);
    public void visit(ClassExtend ClassExtend);
    public void visit(ClassNoExtend ClassNoExtend);
    public void visit(ErrorAnotherVarDecl ErrorAnotherVarDecl);
    public void visit(AnotherVar AnotherVar);
    public void visit(NoMoreVar NoMoreVar);
    public void visit(MoreVar MoreVar);
    public void visit(Var Var);
    public void visit(Arr Arr);
    public void visit(ErrorVarDecl ErrorVarDecl);
    public void visit(VarDeclStart VarDeclStart);
    public void visit(NoMoreConst NoMoreConst);
    public void visit(MoreConst MoreConst);
    public void visit(BoolLiteral BoolLiteral);
    public void visit(CharLiteral CharLiteral);
    public void visit(IntLiteral IntLiteral);
    public void visit(DeclType DeclType);
    public void visit(ConstDecl ConstDecl);
    public void visit(SingleMethodDecl SingleMethodDecl);
    public void visit(MultipleMethodDecl MultipleMethodDecl);
    public void visit(NoGlobalDecl NoGlobalDecl);
    public void visit(GlobalClass GlobalClass);
    public void visit(GlobalVar GlobalVar);
    public void visit(GlobalConst GlobalConst);
    public void visit(ProgName ProgName);
    public void visit(ProgramNoMethods ProgramNoMethods);
    public void visit(ProgramMethods ProgramMethods);

}
